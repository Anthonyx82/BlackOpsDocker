services:
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - uptime_kuma_data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime-kuma.rule=Host(`kuma82.ddns.net`)"
      - "traefik.http.routers.uptime-kuma.entrypoints=websecure"
      - "traefik.http.routers.uptime-kuma.tls.certresolver=myresolver"
      - "traefik.http.services.uptime-kuma.loadbalancer.server.port=3001"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - /raid0/ftpsv/ftp/Docker/BlackOpsDocker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.external-url=https://anthonyx82.ddns.net/prometheus/
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`anthonyx82.ddns.net`) && PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.middlewares=prometheus-auth"
      - "traefik.http.middlewares.prometheus-auth.basicauth.users=${PROMETHEUS_AUTH_USERPASS}"

  ftp:
    image: anthonyx82/ftp_antoniomartin
    container_name: ftp
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    environment:
      - USERS=${FTP_USERS}
      - ADDRESS=${FTP_ADDRESS}
    volumes:
      - /raid0/ftpsv/ftp:/raid0/ftpsv/ftp
    restart: unless-stopped

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /raid0/ftpsv/ftp/Docker/BlackOpsDocker/traefik/traefik.yml:/traefik.yml:ro
      - /raid0/ftpsv/ftp/Docker/BlackOpsDocker/traefik/acme.json:/acme.json
      - /raid0/ftpsv/ftp/Docker/BlackOpsDocker/traefik/dynamic_conf.yml:/etc/traefik/dynamic.yml:ro
      - traefik_logs:/var/log/traefik
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`anthonyx82.ddns.net`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH_USERPASS}"

  whoami:
    image: traefik/whoami
    restart: unless-stopped
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`mail.workoutnoteapp.com`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    networks:
      - web
      - internal
    expose:
      - "16686"

  jaeger-proxy:
    image: nginx:alpine
    container_name: jaeger-proxy
    restart: unless-stopped
    networks:
      - web
      - internal
    volumes:
      - /raid0/ftpsv/ftp/Docker/BlackOpsDocker/jaeger/nginx.conf:/etc/nginx/nginx.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`anthonyx82.ddns.net`) && PathPrefix(`/jaeger`)"
      - "traefik.http.routers.jaeger.entrypoints=websecure"
      - "traefik.http.routers.jaeger.tls.certresolver=myresolver"
      - "traefik.http.services.jaeger.loadbalancer.server.port=80"
      - "traefik.http.routers.jaeger.middlewares=jaeger-auth"
      - "traefik.http.middlewares.jaeger-auth.basicauth.users=${JAEGER_AUTH_USERPASS}"

  glances:
    image: nicolargo/glances:latest
    container_name: glances
    restart: unless-stopped
    pid: "host"
    environment:
      - GLANCES_OPT=-w
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.glances.rule=Host(`anthonyx82.ddns.net`) && PathPrefix(`/performance`)"
      - "traefik.http.routers.glances.entrypoints=websecure"
      - "traefik.http.routers.glances.tls.certresolver=myresolver"
      - "traefik.http.services.glances.loadbalancer.server.port=61208"
      - "traefik.http.middlewares.glances-stripprefix.stripprefix.prefixes=/performance"
      - "traefik.http.routers.glances.middlewares=glances-stripprefix,glances-auth"
      - "traefik.http.middlewares.glances-auth.basicauth.users=${GLANCES_AUTH_USERPASS}"

networks:
  web:
    external: true
  internal:
    driver: bridge

volumes:
  uptime_kuma_data:
    driver: local
    driver_opts:
      type: none
      device: /raid0/ftpsv/ftp/Docker/volumes/uptime_kuma_data
      o: bind

  traefik_logs:
    driver: local
    driver_opts:
      type: none
      device: /raid0/ftpsv/ftp/Docker/volumes/traefik_logs
      o: bind
